name: Backend Continuous Deployment

on:
  push:
    branches:
      - main
    paths:
      - 'starter/backend/**'
  workflow_dispatch:

env:
  REPOSITORY: backend
  IMAGE_TAG: ${{ github.sha }}

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python environment
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: cd starter/backend && pip install pipenv flake8 && pipenv install

      - name: Run Linting
        run: cd starter/backend && pipenv run lint

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python environment
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: cd starter/backend && pip install pipenv && pipenv install

      - name: Run Tests
        run: cd starter/backend && pipenv run test

  build:
    runs-on: ubuntu-latest
    environment: Staging
    needs: [lint, test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::562870963057:role/GitHubAction-AssumeRoleWithAction
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          cd starter/backend
          docker build --tag=$REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
 
  deploy:
    runs-on: ubuntu-latest
    environment: Staging
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region us-east-1 --name ${{ vars.CLUSTER_NAME }}

      - name: Kustomize set image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          cd starter/backend/k8s
          kustomize edit set image backend=$REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Deploy application to EKS cluster
        run: |
          cd starter/backend/k8s
          kustomize build . | kubectl apply -f -

      - name: Verify Deployment Status
        run: |
          if kubectl rollout status deployment/backend -n default --timeout=2m | grep -q 'deployment "backend" successfully rolled out'; then
            echo "Deployment succeeded."
          else
            echo "Deployment failed."
            exit 1
          fi
